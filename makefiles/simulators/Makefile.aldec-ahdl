###############################################################################
# Copyright (c) 2013 Potential Ventures Ltd
# Copyright (c) 2013 SolarFlare Communications Inc
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#     * Neither the name of Potential Ventures Ltd,
#       SolarFlare Communications Inc nor the
#       names of its contributors may be used to endorse or promote products
#       derived from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL POTENTIAL VENTURES LTD BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
###############################################################################

# Common Makefile for Aldec Active-HDL simulator

ifeq ($(GUI),1)
    CMD := avhdl -nosplash
else
    CMD := vsimsa
endif

EXTRA_LIBS = -laldecpli -lstdc++
EXTRA_LIBDIRS = $(ALDEC_PATH)/PLI/Lib

ALOG_ARGS += +define+COCOTB_SIM -dbg -pli libgpi
ACOM_ARGS += -dbg

ifeq ($(COVERAGE),1)
    ASIM_ARGS += -acdb
    ALOG_ARGS += -coverage sb
endif

ifeq ($(GPI_IMPL),vpi)
    GPI_ARGS = -pli libgpi
endif
ifeq ($(GPI_IMPL),vhpi)
    GPI_ARGS = -loadvhpi \"$(call cygpath,$(LIB_DIR)/gpi):vhpi_startup_routines_bootstrap\"
endif

ifndef GPI_ARGS
   $(error "Unable to determine appropriate GPI layer to use")
endif


# Create a TCL script based on the list of sources
$(SIM_BUILD)/runsim.tcl : $(VERILOG_SOURCES) $(VHDL_SOURCES) $(SIM_BUILD)
	echo "alib work" > $@
	echo "set worklib work" >> $@
ifdef VHDL_SOURCES
	echo "acom $(ACOM_ARGS) $(call cygpath,$(VHDL_SOURCES))" >> $@
endif
ifdef VERILOG_SOURCES
	echo "alog $(ALOG_ARGS) $(call cygpath,$(VERILOG_SOURCES))" >> $@
endif
	@echo "GPI_ARGS is $(GPI_ARGS)"
ifdef SCRIPT_FILE
	echo "do $(SCRIPT_FILE)" >> $@
endif
	echo "asim $(ASIM_ARGS) +access +w -O2 -dbg $(GPI_ARGS) $(TOPLEVEL)" >> $@
ifeq ($(WAVES),1)
	echo "log -recursive *" >> $@
endif
ifeq ($(GUI),1)
	echo "wave -rec *" >> $@
else
	echo "run -all" >> $@
	echo "endsim" >> $@
endif
ifeq ($(COVERAGE),1)
	echo "acdb report -db work.acdb -html -o coverage/acdb_report.html" >> $@
	echo "acdb report -db work.acdb -txt -o coverage/acdb_report.txt" >> $@
endif

# Note it's the redirection of the output rather than the 'do' command
# that turns on batch mode (i.e. exit on completion/error)
results.xml: $(SIM_BUILD)/runsim.tcl $(COCOTB_LIBS) $(CUSTOM_SIM_DEPS)
	cd $(SIM_BUILD) && PYTHONPATH="$(call cygpath,$(LIB_DIR):$(SIM_ROOT):$(PWD):$(PYTHONPATH))" \
	PATH="$(LIB_DIR):$(ALDEC_PATH)/PLI/Lib:$(PATH)" MODULE=$(MODULE) TESTCASE=$(TESTCASE) TOPLEVEL=$(TOPLEVEL) $(CMD) -do runsim.tcl | tee sim.log

clean::
	rm -rf $(SIM_BUILD)

EXTRA_GCC_ARGS = -D_ALDEC